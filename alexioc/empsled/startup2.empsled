#! ./genericStream
# boot file startup2.genericStream
#
cd "/data/isacdata/iocboot/genericStreamioc/current"
# boot file startup2.genericStream
#
#
#	kernel: /usr1/local/epics/iocApp/genericStreamApp/R1_5_EPICS3_14_11/bin/linux-x86/genericStream
#	needfile: /usr1/elinac/iocscr/empsled.proto

# =========== Tell streamDevice where to find protocol file(s) ===============
#
epicsEnvSet(IOCSH_PS1, "empsled>")
epicsEnvSet(STREAM_PROTOCOL_PATH,".")
epicsEnvSet(EPICS_CA_REPEATER_PORT,"9101")
epicsEnvSet(EPICS_CA_SERVER_PORT,"9102")


# ====== load and intialize application DBD file(s) =================
# (this must match the name of the executable binary in the shebang line)

dbLoadDatabase("genericStream.dbd")
genericStream_registerRecordDeviceDriver(pdbbase)

## ========================================================
##
#  We can emulate a Tektronix scope over an IP connection.  Good for testing.
#  As long as the INP & OUTP ports in the streamDevice records 
#  use the named port (GPIB0, here), the underlying driver type
#  is irrelevant.
#
#  The emulator is a Perl script (ipservScope.pl) listening 
#    on localhost port 12345
#
drvAsynIPPortConfigure("LAN","142.90.149.102:5024",0,1,0)
# drvAsynIPPortConfigure("GPIB0","localhost:12345",0,1,0)
# drvAsynIPServerPortConfigure("LAN1", "localhost:6666", 1, 0, 0, 0);
# drvAsynIPPortConfigure("LAN1", "localhost:6666", 0, 0, 1);
##
## ========================================================
##  Set up asynTrace: full debugging during boot
##
##  /*asynTrace is implemented by asynManager*/
##  /*All asynTrace methods can be called from any thread*/
##
##  /* traceMask definitions*/
##  /* traceIO mask definitions*/
##  #define ASYN_TRACEIO_NODATA 0x0000
##  #define ASYN_TRACEIO_ASCII  0x0001
##  #define ASYN_TRACEIO_ESCAPE 0x0002
##  #define ASYN_TRACEIO_HEX    0x0004
##
##  #define ASYN_TRACE_ERROR     0x0001
##  #define ASYN_TRACEIO_DEVICE  0x0002
##  #define ASYN_TRACEIO_FILTER  0x0004
##  #define ASYN_TRACEIO_DRIVER  0x0008
##  #define ASYN_TRACE_FLOW      0x0010
##
# asynSetTraceIOMask(GPIB0,10,0x0005)
# asynSetTraceMask  (GPIB0,10,0x001f)
# asynSetTraceIOMask(LAN1,10,0x0005)
# asynSetTraceMask  (LAN1,10,0x001f)

## 
# =========== Load EPICS runtime DB =======================
#
dbLoadRecords("empsled.db")


#
#  Don't use ADDR=10, here (in use by application DB), but okay to change after iocInit
#
# dbLoadRecords("asynRecord.db","P=HEBT:SCOPE1:,R=ASYN,PORT=GPIB0,ADDR=2,IMAX=0,OMAX=0")

##
##
# var subTest1Debug 0
var streamDebug 0
# var wfcursorDebug 0
# var wfTypeConvDebug 0
# asSetFilename( "ios.acf" )

##

## ===================================================
iocInit
## ===================================================

# caPutLogInit("142.90.148.155:7000",1)
caPutLogInit("icsl6.ggeng.triumf.ca:7000",1)
asInit()

# var scopeReadDebug 0
# var wfcursorDebug 0
var streamDebug 0
